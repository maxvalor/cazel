#!/bin/bash

export CAZEL_LIBS_PATH="/usr/lib/cazel/"

source $CAZEL_LIBS_PATH/commands/sync.sh
source $CAZEL_LIBS_PATH/commands/build.sh
source $CAZEL_LIBS_PATH/commands/clean.sh
source $CAZEL_LIBS_PATH/commands/exec.sh

function showCommands()
{
  echo "Usage: cazel <command> <target>"
  echo ""
  echo "Available commands:"
  echo "  sync   - Synchronize depends from server."
  echo "  build  - Build target project by cmake."
  echo "  auto   - execute sync and build command."
  echo "  exec   - execute a binary file."
  echo "  clean  - Clean obj files."
}

function commandComplete()
{
  # to be implemented
  return 0
}

function main()
{
  logInit

  local command=$1
  shift
  case $command in
    "sync"):
    commandCazelSync $@
    ;;
    "build"):
    commandCazelBuild $@
    ;;
    "auto"):
    commandCazelSync $@
    commandCazelBuild $@
    ;;
    "re-auto"):
    commandCazelRemove $@
    commandCazelSync $@
    commandCazelBuild $@
    ;;
    "exec"):
    commandCazelExec $@
    ;;
    "clean"):
    commandCazelClean $@
    ;;
    "remove" | "rm"):
    commandCazelRemove $@
    ;;
    "info"):
    ;;
    "help"):
    showCommands
    ;;
    *):
    echo "unkown command, use \"cazel help\" to get help."
    ;;
  esac
}


main $@
